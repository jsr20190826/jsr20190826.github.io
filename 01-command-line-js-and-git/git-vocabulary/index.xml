<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git Vocabulary on JavaScript</title>
    <link>/01-command-line-js-and-git/git-vocabulary/</link>
    <description>Recent content in Git Vocabulary on JavaScript</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/01-command-line-js-and-git/git-vocabulary/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Repository</title>
      <link>/01-command-line-js-and-git/git-vocabulary/repository/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01-command-line-js-and-git/git-vocabulary/repository/</guid>
      <description> Repository  Most basic element of GitHub
 A repository can be referred to as a project
 contains all of a project&amp;rsquo;s files
 Stores each file&amp;rsquo;s revision history
 Repositories can have multiple collaborators and can be either public or private.
  </description>
    </item>
    
    <item>
      <title>Commit</title>
      <link>/01-command-line-js-and-git/git-vocabulary/commit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01-command-line-js-and-git/git-vocabulary/commit/</guid>
      <description>Commit  A &amp;ldquo;revision&amp;rdquo;, is an individual change to a file (or set of files)
 Git&amp;rsquo;s version of saving
 Commits save a &amp;ldquo;snapshot&amp;rdquo; of all of the project&amp;rsquo;s files at that point in time
 Using commits you can &amp;ldquo;time travel&amp;rdquo; and navigate back to any previous commit that was made throughout the history of the project
 Commits usually contain a commit message which is a brief description of what changes were made</description>
    </item>
    
    <item>
      <title>Branch</title>
      <link>/01-command-line-js-and-git/git-vocabulary/branch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01-command-line-js-and-git/git-vocabulary/branch/</guid>
      <description>Branch  Parallel version of a repository
 Branches allow developers to work on new features without affecting the &amp;ldquo;master&amp;rdquo; branch and disrupting the &amp;ldquo;live&amp;rdquo; version
 The process of creating a separate branch to work on a feature is referred to as &amp;ldquo;creating a feature branch&amp;ldquo;
 After developers have added their new feature (on their feature branch) they will then make a Pull Request (which is a request for comments and a request to Merge their changes back into the main branch (master branch))</description>
    </item>
    
    <item>
      <title>Master Branch</title>
      <link>/01-command-line-js-and-git/git-vocabulary/master-branch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01-command-line-js-and-git/git-vocabulary/master-branch/</guid>
      <description> Master Branch  The default branch found in every Git respository
 For most companies, the master branch reflects that latest version of production code (i.e. working code available to customers)
  </description>
    </item>
    
    <item>
      <title>Merge</title>
      <link>/01-command-line-js-and-git/git-vocabulary/merge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01-command-line-js-and-git/git-vocabulary/merge/</guid>
      <description> Merge  Merging takes the changes from one branch (in the same repository or from a fork), and applies them into another
 This often happens as a Pull Request (which can be thought of as a request for comments and a request to merge into the another branch * usually the master branch)
  </description>
    </item>
    
    <item>
      <title>Push</title>
      <link>/01-command-line-js-and-git/git-vocabulary/push/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01-command-line-js-and-git/git-vocabulary/push/</guid>
      <description> Push  Refers to sending your committed changes to a remote repository such as GitHub.com
 For instance, if you change something locally, you&amp;rsquo;d want to then push those changes so that others may access them
  </description>
    </item>
    
    <item>
      <title>Pull</title>
      <link>/01-command-line-js-and-git/git-vocabulary/pull/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01-command-line-js-and-git/git-vocabulary/pull/</guid>
      <description> Pull  Pulls code from a remote repository and merges it with code in your local repository (on your computer)  </description>
    </item>
    
    <item>
      <title>Fork</title>
      <link>/01-command-line-js-and-git/git-vocabulary/fork/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01-command-line-js-and-git/git-vocabulary/fork/</guid>
      <description> Fork  A fork is a copy of a repository. Forking a repository allows you to freely experiment with changes without affecting the original project
 Most commonly, forks are used to either propose changes to someone else&amp;rsquo;s project or to use someone else&amp;rsquo;s project as a starting point for your own idea
  </description>
    </item>
    
    <item>
      <title>Clone</title>
      <link>/01-command-line-js-and-git/git-vocabulary/clone/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01-command-line-js-and-git/git-vocabulary/clone/</guid>
      <description> Clone  Copies a remote repository (i.e. repository in the cloud on a platform like Github.com) and creates a local copy of the repository on your computer
 Cloning creates a link between the the remote and local copy of a repository, allowing you to your code in sync between the two
  </description>
    </item>
    
    <item>
      <title>Pull Request</title>
      <link>/01-command-line-js-and-git/git-vocabulary/pull-request/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01-command-line-js-and-git/git-vocabulary/pull-request/</guid>
      <description>Pull Request  Pull requests are proposed changes to a repository submitted by a user and accepted or rejected by a repository&amp;rsquo;s collaborators (i.e. team members).
 Pull requests can be thought of as a developer asking for permission to merge their changes into the master branch
 Pull requests each have their own discussion forum, where developer can discuss the changes requested and suggest further revisions.
 This discussion as also referred to as Code Reviews</description>
    </item>
    
  </channel>
</rss>